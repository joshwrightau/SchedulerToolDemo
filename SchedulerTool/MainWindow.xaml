<Window
    x:Class="SchedulerTool.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:SchedulerTool.ViewModels"
    xmlns:v="clr-namespace:SchedulerTool.Views"
    xmlns:m="clr-namespace:SchedulerTool.Models"
    mc:Ignorable="d"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    AllowsTransparency="True"
    ResizeMode="CanResizeWithGrip"
    TextElement.FontSize="12"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterOwner"
    WindowState="{Binding WindowState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    WindowStyle="None"
    Title="Scheduling Tool"
    Height="720"
    Width="540">
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <md:DialogHost>
        <md:DrawerHost IsLeftDrawerOpen="{Binding IsLeftDrawerOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <md:DrawerHost.LeftDrawerContent>
                <DockPanel>
                    <ToggleButton Margin="16" HorizontalAlignment="Right"
                                  Style="{StaticResource MaterialDesignHamburgerToggleButton}" DockPanel.Dock="Top"
                                  IsChecked="{Binding IsLeftDrawerOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <ListBox Margin="0 16"
                                 ItemsSource="{Binding MenuItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 SelectionMode="Single">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="m:MenuItem">
                                    <TextBlock Margin="32 0"
                                               Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    
                </DockPanel>
            </md:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <md:ColorZone Padding="5" md:ShadowAssist.ShadowDepth="Depth2" DockPanel.Dock="Top" Mode="PrimaryMid"
                              MouseDown="MoveWindow_OnMouseDown">
                    <DockPanel>
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                      IsChecked="{Binding IsLeftDrawerOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      DockPanel.Dock="Left" />
                        <StackPanel Width="102" Height="30" VerticalAlignment="Center" Orientation="Horizontal"
                                    DockPanel.Dock="Right">
                            <Button Command="{Binding HelpCommand}" Width="30" Height="30" HorizontalAlignment="Center"
                                    VerticalAlignment="Center" Margin="2" Padding="0">
                                <md:PackIcon Kind="Help" />
                            </Button>
                            <Button Command="{Binding MinimiseCommand}" Width="30" Height="30"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" Padding="0">
                                <md:PackIcon Kind="WindowMinimize" />
                            </Button>
                            <Button Command="{Binding CloseCommand}" Width="30" Height="30"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" Padding="0">
                                <md:PackIcon Kind="ExitToApp" />
                            </Button>
                        </StackPanel>
                        <TextBlock Margin="5 0"
                                   Text="{Binding ApplicationTitle, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Left" />
                    </DockPanel>
                </md:ColorZone>
                <md:Snackbar HorizontalAlignment="Stretch" DockPanel.Dock="Bottom"
                             MessageQueue="{Binding MessageQueue}" />
                <v:DocumentLinks Margin="0"
                                 DataContext="{Binding SelectedMenuItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                 DockPanel.Dock="Bottom" />
                <ScrollViewer
                    Padding="{Binding SelectedMenuItem.MarginThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    HorizontalScrollBarVisibility="{Binding SelectedMenuItem.DisplayHorizontalScrollbar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    VerticalScrollBarVisibility="{Binding SelectedMenuItem.DisplayVerticalScrollbar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <ContentControl Content="{Binding SelectedMenuItem.Content}" />
                </ScrollViewer>
            </DockPanel>
        </md:DrawerHost>
    </md:DialogHost>
</Window>